# (EN) DOWNLOAD THE MAVEN IMAGE
# (EN) VERSION 3.9.7 OF MAVEN IMAGE WITH JRE 17 (ECLIPSE TEMURIN)
# (EN) MAVEN WILL HANDLE THE DEPENDENCIES AND COMPILATION OF THE PROJECT
# (FR) TELECHARGEMENT DE L'IMAGE MAVEN
# (FR) VERSION 3.9.7 DE L'IMAGE MAVEN AVEC JRE 17 (ECLIPSE TEMURIN)
# (FR) MAVEN SE CHARGERA DES DEPENDANCES ET DE LA COMPILATION DU PROJET
FROM maven:3.9.9-eclipse-temurin-17-nobal AS build


# (EN) CREATION OF THE app DIRECTORY AND GO TO IT
# (FR) CREATION DOSSIER app && cd
WORKDIR /app

# (EN) COPY THE CONTENT OF THE PROJECT INSIDE THE app DIRECTORY
# (FR) COPIE DU CONTENU DU PROJET A L'INTERIEUR DU DOSSIER APP
COPY . .

# (EN) DOWNLOAD DEPENDENCIES & COMPILE THE PROJECT
# (FR) TELECHARGEMENT DES DEPENDANCES & COMPILATION DU PROJET
RUN mvn clean package -DskipTests # npm install && npm run build --prod

# (EN) DOWNLOAD THE JRE IMAGE FOR THE EXECUTION OF THE CODE
# (FR) EMPLOI D'UN JRE POUR L'EXECUTION DU CODE
FROM eclipse-temurin:17.0.8_7-jre-jammy-slim

# (EN) CREATION OF THE app DIRECTORY AND GO TO IT
# (FR) CREATION DOSSIER app && cd
WORKDIR /app

# (EN) COPY THE CONTENT OF THE JAVA COMPILED API INSIDE THE JRE IMAGE
# (FR) COPIE DE L'APPLI JAVA COMPILÉE DANS L'IMAGE DU JRE
COPY --from=build /app/target/*.war app.war

# (EN) EXPOSE OF PORT 8080 (USED BY THE API)
# (FR) ECOUTE DU PORT 8080 (UTILISÉ PAR L'API)
EXPOSE 8080

# (EN) DEFINITION OF THE ENTRYPOINT COMMAND THAT WILL BE EXECUTED AT THE LAUNCH OF THE CONTAINER
# (FR) DEFINITION DE LA COMMANDE DE POINT D'ENTRÉE QUI SERA EXÉCUTÉE AU LANCEMENT DU CONTAINER
ENTRYPOINT ["java -jar app.war"]

